@model Meseum.ViewModel.InventoryVM

@{
    /**/

    ViewBag.Title = "Create";
}
<div class="card">
    <div class="card-header py-3">
        <h3 class="m-1 font-weight-bold center text-primary">Inventory</h3>
    </div>
    <div class="card-body">

        @using (Html.BeginForm("Create", "Inventories", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId)

                        @Html.DropDownList("CategoryId", Model.Categories, "--Select--", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LocationId)

                        @Html.DropDownList("LocationId", Model.Locations, "--Select--", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name)

                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Date)

                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", id = "txtDate" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Material)

                        @Html.EditorFor(model => model.Material, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Material, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ObjectCode)

                        @Html.EditorFor(model => model.ObjectCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ObjectCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.size)

                        @Html.EditorFor(model => model.size, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.size, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.OriginOf)
                        @Html.EditorFor(model => model.OriginOf, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OriginOf, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MadeBy)

                        @Html.EditorFor(model => model.MadeBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MadeBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DetailStatus)

                        <div class="checkbox">
                            @Html.EditorFor(model => model.DetailStatus)
                            @Html.ValidationMessageFor(model => model.DetailStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Long)

                        @Html.EditorFor(model => model.Long, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Long, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Latit)

                        @Html.EditorFor(model => model.Latit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Latit, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Altitude)

                        @Html.EditorFor(model => model.Altitude, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Altitude, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>Thumbnail Image</label>

                        <input type="file" id="file" name="File" />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PhotoStatus)

                        <div class="checkbox">
                            @Html.EditorFor(model => model.PhotoStatus)
                            @Html.ValidationMessageFor(model => model.PhotoStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ShortDetail)

                        @Html.EditorFor(model => model.ShortDetail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShortDetail, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LongDetail)

                        @Html.EditorFor(model => model.LongDetail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LongDetail, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="gallery">

                    </div>
                </div>


                <div class="col-md-12 text-center">
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        }
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script src="https://cdn.ckeditor.com/4.13.1/standard/ckeditor.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        CKEDITOR.replace('LongDetail');
        $(function () {
            
            // Multiple images preview in browser
            var imagesPreview = function (input, placeToInsertImagePreview) {

                if (input.files) {
                    var filesAmount = input.files.length;

                    for (i = 0; i < filesAmount; i++) {
                        var reader = new FileReader();

                        reader.onload = function (event) {
                            $($.parseHTML('<img height="50" width="50">')).attr('src', event.target.result).appendTo(placeToInsertImagePreview);
                        }

                        reader.readAsDataURL(input.files[i]);
                    }
                }

            };

            $('#files').on('change', function () {
                imagesPreview(this, 'div.gallery');
            });

            $("#txtDate").datepicker();
        });
    </script>
}

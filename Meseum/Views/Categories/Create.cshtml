@model Meseum.Models.Category

@{
    /**/

    ViewBag.Title = "Create";
}
<h4>Category</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Name)
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.ShortDetail)

                @Html.EditorFor(model => model.ShortDetail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDetail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.LongDetail)

                @Html.EditorFor(model => model.LongDetail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LongDetail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.ShortName)

                @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortName, "", new { @class = "text-danger" })
            </div>
        </div>
      
            <div class="col-md-12">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
   
}
<div>
@Html.ActionLink("Back to List", "Index")
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
